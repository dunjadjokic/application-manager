{"version":3,"sources":["components/NavigationBar.tsx","components/AppEditFields.tsx","components/EditApplicationState.ts","components/AppStorageManager.ts","components/NewApp.tsx","components/ViewApps.tsx","components/EditApp.tsx","components/NotFound.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","Link","as","to","EnglishLevelOptions","arrayOptions","age","push","options","map","value","key","AppEditFields","app","dispatch","Form","Group","Row","controlId","Label","column","sm","Col","Control","pattern","required","type","name","placeholder","onChange","e","payload","target","email","parseInt","phone","Check","inline","label","checked","wayOfCommunication","onClick","selected","startDate","date","englishLevel","skills","rows","personal","studyFromHome","reducer","state","action","AppStorageManager","apps","localStorage","setItem","JSON","stringify","parse","getItem","Date","this","getAll","find","setAll","index","findIndex","a","newApps","filter","NewApp","useReducer","uuidv4","handleSubmit","useCallback","addApp","onSubmit","className","Button","variant","Cards","onDelete","Accordion","i","Card","Header","eventKey","toString","Body","toLocaleDateString","ViewApps","useState","applications","setApplications","handleOnDeleteClick","deleteApp","EditApp1","prevApp","history","useHistory","handleEditSubmit","updateApp","md","xs","EditApp","match","getApp","params","NotFound","alt","src","App","Container","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+MAmBeA,MAdf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,yBAAnB,uBACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,iBAAiB,yBACpB,kBAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,yBAAvB,mBACA,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,6BAAvB,yB,4DCPV,SAASC,IAEP,IADA,IAAIC,EAAyB,GACpBC,EAAM,GAAIA,GAAO,GAAIA,IAC5BD,EAAaE,KAAKD,GAEpB,IAAME,EAAUH,EAAaI,KAAI,SAAAH,GAAG,OAAI,4BAAQI,MAAOJ,EAAKK,IAAKL,GAAMA,MACvE,OAAQ,oCAAGE,GAQE,SAASI,EAAT,GAAsD,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,SAE3C,OACE,oCACE,kBAACC,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,iBAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACEC,QAAQ,yCACRC,UAAQ,EACRC,KAAK,OACLhB,MAAOG,EAAIc,KACXC,YAAY,uBACZC,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,UAAWK,QAAS,CAAEJ,KAAMG,EAAEE,OAAOtB,cAI7E,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,kBAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,kBACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACEE,UAAQ,EACRC,KAAK,QACLhB,MAAOG,EAAIoB,MACXL,YAAY,4BACZC,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,WAAYK,QAAS,CAAEE,MAAOH,EAAEE,OAAOtB,cAI/E,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,8BAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,QACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACEE,UAAQ,EACRvB,GAAG,SACHQ,MAAOG,EAAIP,IACXuB,SAAU,SAAAC,GAAC,OAAIhB,EAAS,CAAEY,KAAM,SAAUK,QAAS,CAAEzB,IAAK4B,SAASJ,EAAEE,OAAOtB,YAC5E,kBAACN,EAAD,SAKN,kBAACW,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,kBAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACEC,QAAQ,YACRC,UAAQ,EACRC,KAAK,OACLhB,MAAOG,EAAIsB,MACXP,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,WAAYK,QAAS,CAAEI,MAAOL,EAAEE,OAAOtB,cAI/E,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,KACd,kBAACF,EAAA,EAAKI,MAAN,CAAYjB,GAAG,SAASkB,QAAM,EAACC,GAAG,KAAlC,kCAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACN,EAAA,EAAKqB,MAAN,CACEX,UAAQ,EACRY,QAAM,EACNX,KAAK,QACLY,MAAM,QACNX,KAAK,qBACL7B,GAAG,QACHY,MAAM,QACN6B,QAAoC,UAA3B1B,EAAI2B,mBACbC,QAAS,kBAAM3B,EAAS,CAAEY,KAAM,wBAAyBK,QAAS,CAAES,mBAAoB,cAE1F,kBAACzB,EAAA,EAAKqB,MAAN,CACEC,QAAM,EACNX,KAAK,QACLY,MAAM,QACNX,KAAK,qBACL7B,GAAG,QACHY,MAAM,QACN6B,QAAoC,UAA3B1B,EAAI2B,mBACbC,QAAS,kBAAM3B,EAAS,CAAEY,KAAM,wBAAyBK,QAAS,CAAES,mBAAoB,gBAI9F,kBAACzB,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,YAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYjB,GAAG,SAASkB,QAAM,EAACC,GAAG,KAAlC,yBACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAAC,IAAD,CACEI,UAAQ,EACRiB,SAAU7B,EAAI8B,UACdd,SAAU,SAACe,GAAD,OAAgB9B,EAAS,CAAEY,KAAM,eAAgBK,QAAS,CAAEY,UAAWC,UAIvF,kBAAC7B,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,8BAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACErB,GAAG,SACH2B,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,kBAAmBK,QAAS,CAAEc,aAAcf,EAAEE,OAAOtB,WACvF,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,SAKN,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,gCAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,iCACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACErB,GAAG,WACHQ,MAAOG,EAAIiC,OACXC,KAAM,EACNlB,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,YAAaK,QAAS,CAAEe,OAAQhB,EAAEE,OAAOtB,cAIjF,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,gCAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gCACA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACN,kBAACN,EAAA,EAAKQ,QAAN,CACErB,GAAG,WACHQ,MAAOG,EAAImC,SACXD,KAAM,EACNlB,SAAU,SAACC,GAAD,OAAOhB,EAAS,CAAEY,KAAM,cAAeK,QAAS,CAAEiB,SAAUlB,EAAEE,OAAOtB,cAIrF,kBAACK,EAAA,EAAKC,MAAN,CAAYd,GAAIe,IAAKC,UAAU,qBAC7B,kBAACH,EAAA,EAAKqB,MAAN,CACEV,KAAK,WACLa,QAAS1B,EAAIoC,cACbX,MAAM,kBACNT,SAAU,SAACC,GAAD,OAA4ChB,EAAS,CAAEY,KAAM,mBAAoBK,QAAS,CAAEkB,cAAenB,EAAEE,OAAOO,gB,WC9IjI,SAASW,EAAQC,EAAoBC,GAE1C,OAAQA,EAAO1B,MACb,IAAK,UACH,OAAO,2BAAKyB,GAAZ,IAAmBxB,KAAMyB,EAAOrB,QAAQJ,OAC1C,IAAK,WACH,OAAO,2BAAKwB,GAAZ,IAAmBlB,MAAOmB,EAAOrB,QAAQE,QAC3C,IAAK,SACH,OAAO,2BAAKkB,GAAZ,IAAmB7C,IAAK8C,EAAOrB,QAAQzB,MACzC,IAAK,WACH,OAAO,2BAAK6C,GAAZ,IAAmBhB,MAAOiB,EAAOrB,QAAQI,QAC3C,IAAK,kBACH,OAAO,2BAAKgB,GAAZ,IAAmBN,aAAcO,EAAOrB,QAAQc,eAClD,IAAK,YACH,OAAO,2BAAKM,GAAZ,IAAmBL,OAAQM,EAAOrB,QAAQe,SAC5C,IAAK,cACH,OAAO,2BAAKK,GAAZ,IAAmBH,SAAUI,EAAOrB,QAAQiB,WAC9C,IAAK,mBACH,OAAO,2BAAKG,GAAZ,IAAmBF,cAAeG,EAAOrB,QAAQkB,gBACnD,IAAK,wBACH,OAAO,2BAAKE,GAAZ,IAAmBX,mBAAoBY,EAAOrB,QAAQS,qBACxD,IAAK,eACH,OAAO,2BAAKW,GAAZ,IAAmBR,UAAWS,EAAOrB,QAAQY,a,6BCtB9BU,E,oGAEGC,GACpBC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,M,+BAKpD,OADqBG,KAAKE,MAAMJ,aAAaK,QAAQ,iBAAmB,MACpDnD,KAAI,SAAAI,GAAG,kCAAUA,GAAV,IAAe8B,UAAW,IAAIkB,KAAKhD,EAAI8B,kB,6BAGtD7C,GAEZ,OADagE,KAAKC,SACNC,MAAK,SAAAnD,GAAG,OAAIA,EAAIf,KAAOA,O,6BAGvBe,GACZ,IAAMyC,EAAOQ,KAAKC,SAClBT,EAAK/C,KAAKM,GACViD,KAAKG,OAAOX,K,gCAGGzC,GACf,IAAMyC,EAAOQ,KAAKC,SACZG,EAAQZ,EAAKa,WAAU,SAAAC,GAAC,OAAIA,EAAEtE,KAAOe,EAAIf,MAC/CwD,EAAKY,GAASrD,EACdiD,KAAKG,OAAOX,K,gCAGGxD,GACf,IACMuE,EADOP,KAAKC,SACGO,QAAO,SAAAzD,GAAG,OAAIA,EAAIf,KAAOA,KAC9CgE,KAAKG,OAAOI,O,KCvCD,SAASE,IAAU,IAAD,EAEPC,qBAAWtB,EAAS,CAC1CpD,GAAI2E,cACJ9C,KAAM,GACNM,MAAO,GACPa,OAAQ,GACRxC,IAAK,GACL6B,MAAO,GACPU,aAAc,KACdG,SAAU,GACVC,eAAe,EACfT,mBAAoB,QACpBG,UAAW,IAAIkB,OAbc,mBAExBhD,EAFwB,KAEnBC,EAFmB,KAgBzB4D,EAAeC,uBAAY,WAC/BtB,EAAkBuB,OAAO/D,KACxB,CAACA,IAEJ,OACE,kBAACE,EAAA,EAAD,CAAM8D,SAAUH,GACd,kBAAC9D,EAAD,CAAeC,IAAKA,EAAKC,SAAUA,IACnC,kBAACG,EAAA,EAAD,CAAK6D,UAAU,0BACb,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,UAA/B,wB,sCCrBFuD,EAAQ,SAAC,GAAD,IAAG3B,EAAH,EAAGA,KAAM4B,EAAT,EAASA,SAAT,OACZ,kBAACC,EAAA,EAAD,KACG7B,EAAK7C,KAAI,SAACI,EAAKuE,GAAN,OACR,kBAACC,EAAA,EAAD,CAAM1E,IAAKyE,GACT,kBAACC,EAAA,EAAKC,OAAN,KACE,kBAACH,EAAA,EAAUxF,OAAX,CAAkBO,GAAI6E,IAAQC,QAAQ,OAAOO,SAAUH,EAAEI,YACvD,uCAAa3E,EAAIoB,QAEnB,kBAAC8C,EAAA,EAAD,CAAQtC,QAAS,kBAAMyC,EAASrE,EAAIf,KAAKkF,QAAQ,QAAjD,UACA,kBAAC,IAAD,CAAM7E,GAAE,oCAA+BU,EAAIf,KAA3C,SAEF,kBAACqF,EAAA,EAAUtF,SAAX,CAAoB0F,SAAUH,EAAEI,YAC9B,kBAACH,EAAA,EAAKI,KAAN,KACE,sCAAY5E,EAAIc,MAChB,oCAAUd,EAAIP,KACd,8CAAoBO,EAAIsB,OACxB,sDAA4BtB,EAAI2B,oBAChC,+CAAqB3B,EAAIgC,cACzB,oDAA0BhC,EAAI8B,UAAU+C,sBACxC,iDAAuB7E,EAAIiC,QAC3B,6DAAmCjC,EAAImC,UACvC,iDAAuBnC,EAAIoC,cAAgB,MAAQ,cAMhD,SAAS0C,IAAY,IAAD,EAEOC,mBAASvC,EAAkBU,UAFlC,mBAE1B8B,EAF0B,KAEZC,EAFY,KAI3BC,EAAsBpB,uBAAY,SAAC7E,GACvCuD,EAAkB2C,UAAUlG,GAC5BgG,EAAgBzC,EAAkBU,YACjC,CAAC+B,IAEJ,OACE,kBAAC,EAAD,CAAOxC,KAAMuC,EAAcX,SAAUa,ICvCzC,SAASE,EAAT,GAA0D,IAAtCC,EAAqC,EAArCA,QACZC,EAAUC,cADuC,EAE/B5B,qBAAWtB,EAASgD,GAFW,mBAEhDrF,EAFgD,KAE3CC,EAF2C,KAIjDuF,EAAmB1B,uBAAY,WACnCtB,EAAkBiD,UAAUzF,GAC5BsF,EAAQ5F,KAAK,+BACZ,CAACM,EAAKsF,IAGT,OACE,kBAACpF,EAAA,EAAD,CAAM8D,SAAUwB,GACd,kBAACzF,EAAD,CAAeC,IAAKA,EAAKC,SAAUA,IACnC,kBAACG,EAAA,EAAD,CAAK6D,UAAU,0BACb,kBAACxD,EAAA,EAAD,CAAKiF,GAAG,OAAOC,GAAI,GACjB,kBAACzB,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,UAA/B,iBAEF,kBAACJ,EAAA,EAAD,CAAKiF,GAAG,OAAOC,GAAI,GACjB,kBAACzB,EAAA,EAAD,CAAQC,QAAQ,UAAUtD,KAAK,SAASe,QAAS,kBAAM0D,EAAQ5F,KAAK,+BAApE,aASK,SAASkG,EAAT,GAA2C,IAAxBC,EAAuB,EAAvBA,MAC1BR,EAAU7C,EAAkBsD,OAAOD,EAAME,OAAO9G,IACtD,OAAKoG,EAGG,kBAACD,EAAD,CAAUC,QAASA,IAFjB,kBAAC,IAAD,CAAU3F,MAAI,EAACJ,GAAG,mCCpCvB,SAAS0G,IACd,OACE,yBAAK/B,UAAU,mBACb,yBAAKgC,IAAI,GAAGC,IAAI,6CC0BPC,MArBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAWzB,IACzD,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,gCAAgCC,UAAWX,IAC7D,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,wBAAwBC,UAAW7C,IACrD,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,iCAAiCC,UAAWP,IAC9D,kBAAC,IAAD,CAAOM,KAAK,KACV,kBAAC,IAAD,CAAU5G,MAAI,EAACJ,GAAG,yCCVZkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2D,cCVNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.999e778e.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nfunction NavigationBar() {\n  return (\n    <Navbar bg=\"light\" expand=\"md\">\n      <Navbar.Brand href=\"/application-manager/\">Application Manager</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav defaultActiveKey=\"/application-manager/\">\n          <Nav.Link as={Link} to=\"/application-manager/\">New application</Nav.Link>\n          <Nav.Link as={Link} to=\"/application-manager/view\">View applications</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\nexport default NavigationBar","import React from 'react';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport { Application } from './AppStorageManager';\nimport { EditAppAction } from './EditApplicationState';\n\nfunction EnglishLevelOptions() {\n  let arrayOptions: number[] = [];\n  for (let age = 18; age <= 35; age++) {\n    arrayOptions.push(age);\n  }\n  const options = arrayOptions.map(age => <option value={age} key={age}>{age}</option>)\n  return (<>{options}</>)\n}\n\ntype EditProps = {\n  app: Application,\n  dispatch: React.Dispatch<EditAppAction>\n}\n\nexport default function AppEditFields({ app, dispatch }: EditProps) {\n\n  return (\n    <>\n      <Form.Group as={Row} controlId=\"formBasicName\">\n        <Form.Label column sm=\"2\">Name </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            pattern=\"([A-Z][a-zA-Z]+)(\\s([A-Z][a-zA-Z]+))*\"\n            required\n            type=\"text\"\n            value={app.name}\n            placeholder=\"Example: Johnny Depp\"\n            onChange={(e) => dispatch({ type: 'setName', payload: { name: e.target.value } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formBasicEmail\">\n        <Form.Label column sm=\"2\">Email address </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            required\n            type=\"email\"\n            value={app.email}\n            placeholder=\"Example: johnny@gmail.com\"\n            onChange={(e) => dispatch({ type: 'setEmail', payload: { email: e.target.value } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\n        <Form.Label column sm=\"2\">Age </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            required\n            as=\"select\"\n            value={app.age}\n            onChange={e => dispatch({ type: 'setAge', payload: { age: parseInt(e.target.value) } })}>\n            <EnglishLevelOptions />\n          </Form.Control>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formBasicPhone\">\n        <Form.Label column sm=\"2\">Phone number </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            pattern=\"[+][0-9]+\"\n            required\n            type=\"text\"\n            value={app.phone}\n            placeholder=\"Example: +38160123456\"\n            onChange={(e) => dispatch({ type: 'setPhone', payload: { phone: e.target.value } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row}>\n        <Form.Label as=\"legend\" column sm=\"2\">\n          Preferred way of communication\n      </Form.Label>\n        <Col sm={10}>\n          <Form.Check\n            required\n            inline\n            type=\"radio\"\n            label=\"email\"\n            name=\"wayofcommunication\"\n            id=\"email\"\n            value=\"email\"\n            checked={app.wayOfCommunication === 'email'}\n            onClick={() => dispatch({ type: 'setWayOfCommunication', payload: { wayOfCommunication: 'email' } })}\n          />\n          <Form.Check\n            inline\n            type=\"radio\"\n            label=\"phone\"\n            name=\"wayofcommunication\"\n            id=\"phone\"\n            value=\"phone\"\n            checked={app.wayOfCommunication === 'phone'}\n            onClick={() => dispatch({ type: 'setWayOfCommunication', payload: { wayOfCommunication: 'phone' } })}\n          />\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId=\"formDate\">\n        <Form.Label as=\"legend\" column sm=\"2\">Available to Start:  </Form.Label>\n        <Col sm=\"10\">\n          <DatePicker\n            required\n            selected={app.startDate}\n            onChange={(date: Date) => dispatch({ type: 'setStartDate', payload: { startDate: date } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"exampleForm.ControlSelect2\">\n        <Form.Label column sm=\"2\">English level</Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => dispatch({ type: 'setEnglishLevel', payload: { englishLevel: e.target.value } })}>\n            <option value='A1'>A1</option>\n            <option value='A2'>A2</option>\n            <option value='B1'>B1</option>\n            <option value='B2'>B2</option>\n            <option value='C1'>C1</option>\n            <option value='C2'>C2</option>\n          </Form.Control>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label column sm=\"2\">Technical skills and courses </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            as=\"textarea\"\n            value={app.skills}\n            rows={3}\n            onChange={(e) => dispatch({ type: 'setSkills', payload: { skills: e.target.value } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea2\">\n        <Form.Label column sm=\"2\">Short personal presentation </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            as=\"textarea\"\n            value={app.personal}\n            rows={3}\n            onChange={(e) => dispatch({ type: 'setPersonal', payload: { personal: e.target.value } })} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formBasicCheckbox\">\n        <Form.Check\n          type=\"checkbox\"\n          checked={app.studyFromHome}\n          label=\"Study from home\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch({ type: 'setStudyFromHome', payload: { studyFromHome: e.target.checked } })} />\n      </Form.Group>\n    </>)\n}","import { Application } from \"./AppStorageManager\"\n\nexport type EditAppAction =\n  | { type: \"setName\", payload: { name: string } }\n  | { type: \"setEmail\", payload: { email: string } }\n  | { type: \"setAge\", payload: { age: number } }\n  | { type: \"setPhone\", payload: { phone: string } }\n  | { type: \"setEnglishLevel\", payload: { englishLevel: string } }\n  | { type: \"setSkills\", payload: { skills: string } }\n  | { type: \"setPersonal\", payload: { personal: string } }\n  | { type: \"setStudyFromHome\", payload: { studyFromHome: boolean } }\n  | { type: \"setWayOfCommunication\", payload: { wayOfCommunication: 'phone' | 'email' } }\n  | { type: \"setStartDate\", payload: { startDate: Date } }\n\nexport function reducer(state: Application, action: EditAppAction) : Application {\n\n  switch (action.type) {\n    case \"setName\":\n      return { ...state, name: action.payload.name }\n    case \"setEmail\":\n      return { ...state, email: action.payload.email }\n    case \"setAge\":\n      return { ...state, age: action.payload.age }\n    case \"setPhone\":\n      return { ...state, phone: action.payload.phone }\n    case \"setEnglishLevel\":\n      return { ...state, englishLevel: action.payload.englishLevel }\n    case \"setSkills\":\n      return { ...state, skills: action.payload.skills }\n    case \"setPersonal\":\n      return { ...state, personal: action.payload.personal }\n    case \"setStudyFromHome\":\n      return { ...state, studyFromHome: action.payload.studyFromHome }\n    case \"setWayOfCommunication\":\n      return { ...state, wayOfCommunication: action.payload.wayOfCommunication }\n    case \"setStartDate\":\n      return { ...state, startDate: action.payload.startDate }\n  }\n}","export interface Application {\n  id: string,\n  name: string,\n  email: string,\n  age: number,\n  phone: string,\n  englishLevel: string,\n  skills: string,\n  personal: string,\n  studyFromHome: boolean,\n  wayOfCommunication: 'phone' | 'email',\n  startDate: Date\n}\n\nexport default class AppStorageManager {\n\n  private static setAll(apps: Application[]) {\n    localStorage.setItem('applications', JSON.stringify(apps))\n  }\n\n  static getAll() {\n    const applications = JSON.parse(localStorage.getItem('applications') || '[]') as any[]\n    return applications.map(app => ({ ...app, startDate: new Date(app.startDate) }) as Application)\n  }\n\n  static getApp(id: string) {\n    const apps = this.getAll()\n    return apps.find(app => app.id === id)\n  }\n\n  static addApp(app: Application) {\n    const apps = this.getAll()\n    apps.push(app)\n    this.setAll(apps)\n  }\n\n  static updateApp(app: Application) {\n    const apps = this.getAll()\n    const index = apps.findIndex(a => a.id === app.id)\n    apps[index] = app\n    this.setAll(apps)\n  }\n\n  static deleteApp(id: string) {\n    const apps = this.getAll()\n    const newApps = apps.filter(app => app.id !== id)\n    this.setAll(newApps)\n  }\n}","import React, { useReducer, useCallback } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport AppEditFields from './AppEditFields'\nimport { reducer } from './EditApplicationState'\nimport { Form, Button, Row } from 'react-bootstrap'\nimport AppStorageManager from './AppStorageManager'\n\nexport default function NewApp() {\n\n  const [app, dispatch] = useReducer(reducer, {\n    id: uuidv4(),\n    name: '',\n    email: '',\n    skills: '',\n    age: 18,\n    phone: '',\n    englishLevel: 'A1',\n    personal: '',\n    studyFromHome: false,\n    wayOfCommunication: 'email',\n    startDate: new Date()\n  })\n\n  const handleSubmit = useCallback(() => {\n    AppStorageManager.addApp(app)\n  }, [app])\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <AppEditFields app={app} dispatch={dispatch} />\n      <Row className=\"justify-content-center\">\n        <Button variant=\"primary\" type=\"submit\">Submit application</Button>\n      </Row>\n    </Form>\n  )\n}","import React, { useCallback, useState } from 'react'\nimport { Accordion, Button, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport AppStorageManager, { Application } from './AppStorageManager'\n\ntype CardProps = {\n  apps: Application[],\n  onDelete: (id: string) => void\n}\n\nconst Cards = ({ apps, onDelete }: CardProps) => (\n  <Accordion>\n    {apps.map((app, i) => (\n      <Card key={i}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={i.toString()}>\n            <div>Email: {app.email}</div>\n          </Accordion.Toggle>\n          <Button onClick={() => onDelete(app.id)} variant='link'>Delete</Button>\n          <Link to={`/application-manager/edit/${app.id}`}>Edit</Link>\n        </Card.Header>\n        <Accordion.Collapse eventKey={i.toString()}>\n          <Card.Body>\n            <div>Name: {app.name}</div>\n            <div>Age:{app.age}</div>\n            <div>Phone number: {app.phone}</div>\n            <div>Way of communication: {app.wayOfCommunication}</div>\n            <div>English level: {app.englishLevel}</div>\n            <div>Available to start: {app.startDate.toLocaleDateString()}</div>\n            <div>Tehnical skills: {app.skills}</div>\n            <div>Short personal presentation: {app.personal}</div>\n            <div>Study from home: {app.studyFromHome ? \"Yes\" : 'No'}</div></Card.Body>\n        </Accordion.Collapse>\n      </Card>))}\n  </Accordion>\n)\n\nexport default function ViewApps() {\n\n  const [applications, setApplications] = useState(AppStorageManager.getAll())\n\n  const handleOnDeleteClick = useCallback((id: string) => {\n    AppStorageManager.deleteApp(id)\n    setApplications(AppStorageManager.getAll())\n  }, [setApplications])\n\n  return (\n    <Cards apps={applications} onDelete={handleOnDeleteClick} />\n  )\n}","import React, { useCallback, useReducer } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport AppEditFields from './AppEditFields'\nimport AppStorageManager, { Application } from './AppStorageManager'\nimport { reducer } from './EditApplicationState'\n\n\nfunction EditApp1({ prevApp }: { prevApp: Application }) {\n  const history = useHistory();\n  const [app, dispatch] = useReducer(reducer, prevApp)\n\n  const handleEditSubmit = useCallback(() => {\n    AppStorageManager.updateApp(app)\n    history.push('/application-manager/view')\n  }, [app, history])\n\n\n  return (\n    <Form onSubmit={handleEditSubmit}>\n      <AppEditFields app={app} dispatch={dispatch} />\n      <Row className=\"justify-content-center\">\n        <Col md=\"auto\" xs={6}>\n          <Button variant=\"primary\" type=\"submit\">Save changes</Button>\n        </Col>\n        <Col md=\"auto\" xs={6}>\n          <Button variant=\"primary\" type=\"submit\" onClick={() => history.push(\"/application-manager/view\")}>Cancel</Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\ntype EditAppProps = { match: { params: { id: string } } }\n\nexport default function EditApp({ match }: EditAppProps) {\n  const prevApp = AppStorageManager.getApp(match.params.id)\n  if (!prevApp) {\n    return (<Redirect push to='/application-manager/not-found' />)\n  }\n  return (<EditApp1 prevApp={prevApp} />)\n}","import React from 'react'\n\nexport function NotFound() {\n  return (\n    <div className=\"not-found-image\">\n      <img alt=\"\" src=\"/application-manager/404_not_found.webp\" />\n    </div>\n  )\n} ","import React from 'react';\n//import './App.css';\nimport NavigationBar from './NavigationBar';\nimport NewApp from './NewApp'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container'\nimport ViewApps from './ViewApps'\nimport EditApp from './EditApp';\nimport { NotFound } from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavigationBar />\n        <Container>\n          <Switch>\n            <Route exact path=\"/application-manager/view\" component={ViewApps} />\n            <Route exact path=\"/application-manager/edit/:id\" component={EditApp} />\n            <Route exact path=\"/application-manager/\" component={NewApp} />\n            <Route exact path=\"/application-manager/not-found\" component={NotFound} />\n            <Route path=\"*\">\n              <Redirect push to=\"/application-manager/not-found\" />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}